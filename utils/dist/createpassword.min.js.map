{"version":3,"sources":["createpassword.js"],"names":["alpha","numbers","symbols","length","hasNumbers","hasSymbols","chars","createPassword","generatePassword","password","i","charAt","Math","floor","random","module","exports"],"mappings":"aAAA,IAAMA,MAAQ,uDACRC,QAAU,aADVD,QAAQ,eAERE,eAAU,SAAAC,EAAhBC,EAAAC,GAGI,IAAIC,EAAQN,MACZI,OAFEG,IAAcD,GAAGL,SACnBI,IAAYL,GAAZE,SACAE,iBAAuBH,EAAvBK,IAFJE,iBAAA,SAAAL,EAAAG,GAOME,IACF,IAAIC,EAAW,GADbD,EAAAA,EAAgBE,EAAGP,EAAnBK,IACEC,GAAJH,EAAAK,OAAAC,KAAAC,MAAAD,KAAAE,SAAAR,EAAAH,SACA,OAASO,GAERK,OAAAC,QAAAT","file":"createpassword.min.js","sourcesContent":["const alpha = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\r\nconst numbers = '0123456789'\r\nconst symbols = '!@#$%^&*_-+='\r\n\r\nconst createPassword = (length, hasNumbers, hasSymbols) => {\r\n    let chars = alpha\r\n    hasNumbers ? (chars += numbers) : ''\r\n    hasSymbols ? (chars += symbols) : ''\r\n    return generatePassword(length, chars)\r\n}\r\n\r\nconst generatePassword = (length, chars) => {\r\n    let password = ''\r\n    for (let i = 0; i < length; i++) {\r\n        password += chars.charAt(Math.floor(Math.random() * chars.length))\r\n    }\r\n    return password\r\n}\r\nmodule.exports = createPassword\r\n\r\n"]}